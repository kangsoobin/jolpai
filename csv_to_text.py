import pandas as pd
from llama_cpp import Llama

# ✅ LLM 모델 로드
llm = Llama(
    model_path="models/llama-3.2-Korean-Bllossom-3B-Q6_K_L.gguf",
    n_ctx=4096,  # 필요하면 4096으로 늘려도 됨
    n_threads=4,
    verbose=False
)

# ✅ 프롬프트 템플릿
def build_prompt(table_str: str) -> str:
    return f"""<|start_header_id|>system<|end_header_id|>
다음은 야구 경기와 관련된 테이블 데이터입니다.
당신의 작업은 다음과 같습니다:

###  목표
- 테이블의 각 행(row)을 정보 저장에 적합한 **자연스러운 한 문단의 줄글**로 변환하세요.

###  필수 조건
1. 줄글로 변환할 때 어떤 정보도 누락되면 안 됩니다.
2. 문장은 **정보형 서술체**여야 하며, 해석, 평가, 과장 없이 **팩트 기반으로 기술**하세요.
3. 각 줄글은 **자연어 문장**으로 구성되되, 추후 데이터 파싱 및 분석에 적합하도록 **논리적 구조**를 유지하세요.
4. 줄글은 **구체적인 항목 구분 없이 하나의 문장 또는 두 문장**으로 구성하세요.
5. 없는 데이터를 만들어내지 마세요. 원본테이블을 해석한 줄글만 출력하세요.

입력된 테이블이 아래의 세 가지 참고 항목에 **정확히 해당하는 경우에만** 참고하여 줄글로 변환하세요.
## 참고 : [경기주요기록] 해석 방법
  - 결승타, 홈런, 2루타, 실책, 도루, 도루자, 병살타, 폭투, 보크, 심판의 모든 컬럼을 각각 한줄씩 줄글로 변환한다.
  
## 참고 : [홈런] 컬럼 해석 방법

- `홈런 양의지 7호 8호(3회 1점, 7회 1점, 루에바스, 문용익)`  
  → “양의지는 3회에 루에바스를 상대로 1점짜리 7호 홈런, 7회에 문용익을 상대로 1점짜리 8호 홈런을 기록했다.”

- `김재환 7호(7회 1점, 문용익)`  
  → “김재환은 7회 문용익을 상대로 1점짜리 시즌 7호 홈런을 기록했다.”

- 형식 규칙:  
  **[선수명] [n호] ([이닝 m점, 상대투수])**  
  → “OO는 [이닝]에 [상대 투수]를 상대로 [m점]짜리 [n호] 홈런을 기록했다.” 형식으로 바꿔주세요.  
  여러 개 있을 경우 각각 나열합니다.
  
## 참고 : [결정적 장면 best5]  해석 방법

- 결정적 장면 테이블의 모든 행을 다음 순서로 설명하여 줄글로 나타내시오:
  1. 이닝초/말 + 투수 이름 + 타자 이름 + 투구 정보(P)
  2. 결과: 어떤 결과였는지
  3. 이전상황 → 이후상황으로 경기 흐름이 어떻게 바뀌었는지

- 예시:
  - “1회초, 쿠에바스는 김민태와의 6구(3-2) 승부에서 우익수 방면 2루타를 맞아 1사 1,3루 1:0 상황을 1사 2,3루 2:0으로 바꿨다.”
  - “7회초, 문용익은 양의지에게 좌익수 뒤 홈런을 허용하며 6:3에서 7:3으로 점수가 벌어졌다.”
  
## 참고 : [경기 스코어] 테이블 해석 방법

- 각 행을 다음 구성으로 설명하세요.
  1. **구장, 관중 수, 경기 시작 시각, 종료 시각, 경기 소요 시간**
    예시 : 경기는 수원구장에서 열렸으며, 관중 수는 8,822명이었다. 경기는 18시 30분에 시작해 21시 35분에 종료되었고, 경기 시간은 3시간 5분이었다
  2. 승팀 이닝별 기록 (R: 총득점, H:안타, E:실책, B:볼넷)
     예시 : 두산이 1회 4점, 3회 1점, 5회 1점, 7회 4점, 8회 2점을 기록하며 총 12점을 올렸고, 13안타, 1실책, 9볼넷을 기록했다.
  3. 패팀 이닝별 기록
  4. 팀별 시즌 전적, 승팀 패팀 둘다 서술하시오.
     예시 : 두산은 이번 시즌 22승 29패 3무를 기록하였다.



### 입력 테이블:
아래는 입력 데이터입니다. 위의 기준에 따라 줄글을 출력해주세요.

<|eot_id|><|start_header_id|>user<|end_header_id|>
{table_str}
<|eot_id|><|start_header_id|>assistant<|end_header_id|>"""


# ✅ CSV → 줄글 변환 함수

def convert_csv_to_text(csv_path: str) -> str:
    try:
        df = pd.read_csv(csv_path)
        df = df.head(15)  # 긴 CSV 방지용 (최대 10행만)
        print(df)
    except Exception as e:
        return f"[❌ 오류] CSV를 불러올 수 없습니다: {e}"

    table_str = df.to_markdown(index=False)
    prompt = build_prompt(table_str)

    output = llm(
        prompt,
        temperature=0.7,
        max_tokens=2048,
        stop=["<|eot_id|>"]
    )
    return output["choices"][0]["text"].strip()

# ✅ 사용자 입력 받기
if __name__ == "__main__":
    path = input("📂 CSV 파일 경로를 입력하세요: ").strip()
    result = convert_csv_to_text(path)

    print("\n📝 줄글 변환 결과:\n")
    print(result)